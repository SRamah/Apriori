/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Algorithme_Apriori.TraitementFile;
import static Interface.JFrameGUI.frame;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.text.DecimalFormat;
import java.util.LinkedList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author salaheddine
 */
public class BodyPanel1 extends javax.swing.JPanel {

    /**
     * Creates new form BodyPanel1
     */
    int count=0,count1=0;
    int info=0;  int info1=0;
    LinkedList<JTextField> names = new LinkedList();
    JScrollPane jScrollPane = new JScrollPane();
    int taillelist;
    TraitementFile Gtf = new TraitementFile();
    LinkedList<LinkedList> travmatrice = new LinkedList();
    String stRules =new String();
    String stResume =new String();
    LinkedList<LinkedList> tabSolu = new LinkedList();
    
    
    
    
    
    public BodyPanel1() {
        initComponents();
        
    }

    
    public JPanel BodyPanel1(JPanel p) {
        initComponents();
        DragDropFile();
        jPanelSeparator.setVisible(false);
        jPanelPage2.setVisible(false);
        jPanelPage3.setVisible(false);
        page2_top.setVisible(false);
        /////////////======///////////
        jPanelAac_top.setVisible(true);
        page1_top.setVisible(true);
        jPanelPage1.setVisible(true);
        jPanelDetail.setVisible(false);
        ////////////======///////////
        //jPanelB.setVisible(false);
        p.add("Center", this);
        return p;
    }
    
    
        public void choosefile(){
        FileFilter txt = new FiltreSimple("Fichiers txt",".txt"); 
        
        JFileChooser chooser = new JFileChooser("~"); 
        chooser.addChoosableFileFilter(txt); 
        
        chooser.showOpenDialog(null);
        try {
            if(chooser.getSelectedFile().getName().endsWith(".txt")){
            System.out.println("You chose to open this file: " + chooser.getSelectedFile().getName());
            System.out.println("path : " + chooser.getSelectedFile().getPath());
            jLabelPath.setForeground(new java.awt.Color(0, 0, 0)); 
            jLabelPath.setText(chooser.getSelectedFile().getPath());
            }else{
                jLabelPath.setForeground(new java.awt.Color(255, 51, 51)); 
                jLabelPath.setText("Please select a file type .txt");
            }
        } 
        catch (Exception e) {
            System.out.println("imposible de choisir un fichier "+e);
        }
        
        /*TraitementFichier tf = new TraitementFichier();
        LinkedList<LinkedList> Matrix = new LinkedList(tf.TraitementFichier(chooser.getSelectedFile().getPath()));
        
        CountVar cv = new CountVar();
        
        cv.CountVar(Matrix, 4);*/
    
    }
    
    
    
   public void DragDropFile(){
       //List<File> dropppedFiles = (List<File>)jTextArea1.getTransferData(DataFlavor.javaFileListFlavor);
       new  FileDrop( page1_top, new FileDrop.Listener()
      {   public void  filesDropped( java.io.File[] files )
          {   
              // handle file drop
              try
                    {   
                        if(files[0].getName().endsWith(".txt")){
                            jLabelPath.setForeground(new java.awt.Color(0, 0, 0)); 
                            jLabelPath.setText(files[0].getCanonicalPath() );
                        }else{
                                jLabelPath.setForeground(new java.awt.Color(255, 51, 51)); 
                                jLabelPath.setText("Please select a file type .txt");
                            }
                    }   // end try
                    catch( java.io.IOException e ) {}
          }   // end filesDropped
      }); // end FileDrop.Listener
   }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSeparator = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanelA = new javax.swing.JPanel();
        jPanel0 = new javax.swing.JPanel();
        jPanelAa = new javax.swing.JPanel();
        jPanelAaf = new javax.swing.JPanel();
        jPanelAaf_topbar = new javax.swing.JPanel();
        jPanelAaf_center = new javax.swing.JPanel();
        jLabelPath = new javax.swing.JLabel();
        jLabelAddFile = new javax.swing.JLabel();
        jLabel0 = new javax.swing.JLabel();
        jPanelAac = new javax.swing.JPanel();
        jPanelAac_footer = new javax.swing.JPanel();
        jPanelPage3 = new javax.swing.JPanel();
        jPanelDetail = new javax.swing.JPanel();
        actorJLabel = new javax.swing.JLabel();
        getActorsjTextField = new javax.swing.JTextField();
        getActionTextField = new javax.swing.JTextField();
        actionJLabel = new javax.swing.JLabel();
        jLabelBackVarNames = new javax.swing.JLabel();
        jLabelPasseShowRules = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabelGetResume = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanelPage2 = new javax.swing.JPanel();
        jLabelBackFileDrop = new javax.swing.JLabel();
        jLabelPasseRulesFilter = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabelCheckError = new javax.swing.JLabel();
        jPanelPage1 = new javax.swing.JPanel();
        Default_Separator = new javax.swing.JCheckBox();
        jPanelSeparator = new javax.swing.JPanel();
        Other_Separator = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        getFirstSeparatorjTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        getSecondSeparatorjTextField = new javax.swing.JTextField();
        jLabelGetInfo = new javax.swing.JLabel();
        jLabelCancelPathFile = new javax.swing.JLabel();
        jLabelPasseVarNames = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelFrequenceRegle = new javax.swing.JLabel();
        jLabelError = new javax.swing.JLabel();
        jTextFieldFrequenceRegle = new javax.swing.JFormattedTextField();
        jPanelAac_top = new javax.swing.JPanel();
        page2_top = new javax.swing.JPanel();
        jPanelFilterMin = new javax.swing.JPanel();
        jLabelConfianceRegleMin = new javax.swing.JLabel();
        jLabelLevierRegleMin = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldConfianceRegleMin = new javax.swing.JFormattedTextField();
        jTextFieldLevierRegleMin = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanelFilterSup = new javax.swing.JPanel();
        jLabelConfianceRegleSup = new javax.swing.JLabel();
        jLabelLevierRegleSup = new javax.swing.JLabel();
        jLabelGoTOMin = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldConfianceRegleSup = new javax.swing.JFormattedTextField();
        jTextFieldLevierRegleSup = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabelConsequent = new javax.swing.JLabel();
        jTextFieldConsequent = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabelErrorFilter = new javax.swing.JLabel();
        jLabelRefresh = new javax.swing.JLabel();
        page1_top = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel0plus = new javax.swing.JPanel();
        jPanelNames = new javax.swing.JPanel();
        jPanelB = new javax.swing.JPanel();
        jPanelB1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(877, 498));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanelA.setPreferredSize(new java.awt.Dimension(400, 498));
        jPanelA.setLayout(new java.awt.BorderLayout());

        jPanel0.setBackground(new java.awt.Color(235, 235, 235));
        jPanel0.setPreferredSize(new java.awt.Dimension(2, 498));

        javax.swing.GroupLayout jPanel0Layout = new javax.swing.GroupLayout(jPanel0);
        jPanel0.setLayout(jPanel0Layout);
        jPanel0Layout.setHorizontalGroup(
            jPanel0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel0Layout.setVerticalGroup(
            jPanel0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 753, Short.MAX_VALUE)
        );

        jPanelA.add(jPanel0, java.awt.BorderLayout.EAST);

        jPanelAa.setBackground(new java.awt.Color(241, 241, 241));
        jPanelAa.setPreferredSize(new java.awt.Dimension(398, 400));
        jPanelAa.setLayout(new java.awt.BorderLayout());

        jPanelAaf.setPreferredSize(new java.awt.Dimension(398, 60));
        jPanelAaf.setLayout(new java.awt.BorderLayout());

        jPanelAaf_topbar.setBackground(new java.awt.Color(235, 235, 235));
        jPanelAaf_topbar.setPreferredSize(new java.awt.Dimension(400, 2));

        javax.swing.GroupLayout jPanelAaf_topbarLayout = new javax.swing.GroupLayout(jPanelAaf_topbar);
        jPanelAaf_topbar.setLayout(jPanelAaf_topbarLayout);
        jPanelAaf_topbarLayout.setHorizontalGroup(
            jPanelAaf_topbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        jPanelAaf_topbarLayout.setVerticalGroup(
            jPanelAaf_topbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        jPanelAaf.add(jPanelAaf_topbar, java.awt.BorderLayout.PAGE_START);

        jPanelAaf_center.setBackground(new java.awt.Color(249, 249, 249));
        jPanelAaf_center.setLayout(new java.awt.BorderLayout());

        jLabelPath.setPreferredSize(new java.awt.Dimension(300, 16));
        jPanelAaf_center.add(jLabelPath, java.awt.BorderLayout.EAST);

        jLabelAddFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/addfile.png"))); // NOI18N
        jLabelAddFile.setText("  Path :");
        jLabelAddFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelAddFile.setMaximumSize(new java.awt.Dimension(89, 32));
        jLabelAddFile.setMinimumSize(new java.awt.Dimension(89, 32));
        jLabelAddFile.setPreferredSize(new java.awt.Dimension(89, 32));
        jLabelAddFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelAddFileMouseClicked(evt);
            }
        });
        jPanelAaf_center.add(jLabelAddFile, java.awt.BorderLayout.CENTER);

        jLabel0.setText("  ");
        jLabel0.setPreferredSize(new java.awt.Dimension(15, 16));
        jPanelAaf_center.add(jLabel0, java.awt.BorderLayout.WEST);

        jPanelAaf.add(jPanelAaf_center, java.awt.BorderLayout.CENTER);

        jPanelAa.add(jPanelAaf, java.awt.BorderLayout.PAGE_END);

        jPanelAac.setBackground(new java.awt.Color(249, 249, 249));
        jPanelAac.setLayout(new java.awt.BorderLayout());

        jPanelAac_footer.setBackground(new java.awt.Color(249, 249, 249));
        jPanelAac_footer.setPreferredSize(new java.awt.Dimension(398, 200));
        jPanelAac_footer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelPage3.setBackground(new java.awt.Color(249, 249, 249));
        jPanelPage3.setPreferredSize(new java.awt.Dimension(398, 100));
        jPanelPage3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelDetail.setBackground(new java.awt.Color(249, 249, 249));

        actorJLabel.setText("Actors :");

        getActorsjTextField.setBackground(new java.awt.Color(253, 253, 253));
        getActorsjTextField.setText("clients");
        getActorsjTextField.setBorder(null);

        getActionTextField.setBackground(new java.awt.Color(253, 253, 253));
        getActionTextField.setText("achètent");
        getActionTextField.setBorder(null);

        actionJLabel.setText("Action :");

        javax.swing.GroupLayout jPanelDetailLayout = new javax.swing.GroupLayout(jPanelDetail);
        jPanelDetail.setLayout(jPanelDetailLayout);
        jPanelDetailLayout.setHorizontalGroup(
            jPanelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(actorJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getActorsjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(actionJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getActionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelDetailLayout.setVerticalGroup(
            jPanelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDetailLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actorJLabel)
                    .addComponent(getActorsjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(actionJLabel)
                        .addComponent(getActionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanelPage3.add(jPanelDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 3, 365, 30));

        jLabelBackVarNames.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/return0.png"))); // NOI18N
        jLabelBackVarNames.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelBackVarNames.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBackVarNamesMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelBackVarNamesMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelBackVarNamesMouseEntered(evt);
            }
        });
        jPanelPage3.add(jLabelBackVarNames, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 46, -1, -1));

        jLabelPasseShowRules.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/next0.png"))); // NOI18N
        jLabelPasseShowRules.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelPasseShowRules.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPasseShowRulesMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelPasseShowRulesMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelPasseShowRulesMouseEntered(evt);
            }
        });
        jPanelPage3.add(jLabelPasseShowRules, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 46, -1, -1));

        jLabel19.setForeground(new java.awt.Color(158, 200, 141));
        jLabel19.setText("Back");
        jPanelPage3.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 80, -1, -1));

        jLabel20.setForeground(new java.awt.Color(158, 200, 141));
        jLabel20.setText("Next");
        jPanelPage3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 80, -1, -1));

        jLabelGetResume.setText("Get Resume");
        jLabelGetResume.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelGetResume.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelGetResumeMouseClicked(evt);
            }
        });
        jPanelPage3.add(jLabelGetResume, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, -1, -1));

        jLabel18.setText("^^");
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });
        jPanelPage3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, -1, -1));

        jPanelAac_footer.add(jPanelPage3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanelPage2.setBackground(new java.awt.Color(249, 249, 249));
        jPanelPage2.setPreferredSize(new java.awt.Dimension(398, 100));
        jPanelPage2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelBackFileDrop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/return0.png"))); // NOI18N
        jLabelBackFileDrop.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelBackFileDrop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBackFileDropMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelBackFileDropMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelBackFileDropMouseEntered(evt);
            }
        });
        jPanelPage2.add(jLabelBackFileDrop, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 46, -1, -1));

        jLabelPasseRulesFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/next0.png"))); // NOI18N
        jLabelPasseRulesFilter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelPasseRulesFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPasseRulesFilterMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelPasseRulesFilterMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelPasseRulesFilterMouseEntered(evt);
            }
        });
        jPanelPage2.add(jLabelPasseRulesFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 46, -1, -1));

        jLabel15.setForeground(new java.awt.Color(158, 200, 141));
        jLabel15.setText("Back");
        jPanelPage2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 80, -1, -1));

        jLabel16.setForeground(new java.awt.Color(158, 200, 141));
        jLabel16.setText("Next");
        jPanelPage2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 80, -1, -1));

        jLabelCheckError.setForeground(new java.awt.Color(217, 32, 32));
        jPanelPage2.add(jLabelCheckError, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 60, 250, 20));

        jPanelAac_footer.add(jPanelPage2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanelPage1.setBackground(new java.awt.Color(249, 249, 249));
        jPanelPage1.setPreferredSize(new java.awt.Dimension(398, 200));
        jPanelPage1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Default_Separator.setBackground(new java.awt.Color(241, 241, 241));
        buttonGroupSeparator.add(Default_Separator);
        Default_Separator.setSelected(true);
        Default_Separator.setText("Default Separator (space,comma)");
        Default_Separator.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Default_SeparatorMouseClicked(evt);
            }
        });
        jPanelPage1.add(Default_Separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jPanelSeparator.setBackground(new java.awt.Color(249, 249, 249));
        jPanelSeparator.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Other_Separator.setBackground(new java.awt.Color(241, 241, 241));
        buttonGroupSeparator.add(Other_Separator);
        Other_Separator.setText("Other Separator");
        jPanelSeparator.add(Other_Separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));

        jLabel3.setText("Between TID & Items : ");
        jPanelSeparator.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 30, -1, -1));

        getFirstSeparatorjTextField.setBackground(new java.awt.Color(253, 253, 253));
        getFirstSeparatorjTextField.setBorder(null);
        jPanelSeparator.add(getFirstSeparatorjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 100, 20));

        jLabel4.setText("Between Items :");
        jPanelSeparator.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 60, -1, -1));

        getSecondSeparatorjTextField.setBackground(new java.awt.Color(253, 253, 253));
        getSecondSeparatorjTextField.setBorder(null);
        jPanelSeparator.add(getSecondSeparatorjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 100, 20));

        jLabelGetInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/info.png"))); // NOI18N
        jLabelGetInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelGetInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelGetInfoMouseClicked(evt);
            }
        });
        jPanelSeparator.add(jLabelGetInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, -1, -1));

        jPanelPage1.add(jPanelSeparator, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 370, 80));

        jLabelCancelPathFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/Cancel0.png"))); // NOI18N
        jLabelCancelPathFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCancelPathFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCancelPathFileMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelCancelPathFileMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelCancelPathFileMouseEntered(evt);
            }
        });
        jPanelPage1.add(jLabelCancelPathFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 146, -1, -1));

        jLabelPasseVarNames.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/next0.png"))); // NOI18N
        jLabelPasseVarNames.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelPasseVarNames.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPasseVarNamesMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelPasseVarNamesMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelPasseVarNamesMouseEntered(evt);
            }
        });
        jPanelPage1.add(jLabelPasseVarNames, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 146, -1, -1));

        jLabel8.setForeground(new java.awt.Color(204, 0, 0));
        jLabel8.setText("Cancel");
        jPanelPage1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 180, -1, -1));

        jLabel9.setForeground(new java.awt.Color(158, 200, 141));
        jLabel9.setText("Next");
        jPanelPage1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 180, -1, -1));

        jLabelFrequenceRegle.setForeground(new java.awt.Color(234, 50, 50));
        jLabelFrequenceRegle.setText("Fréquence (Règle) :");
        jPanelPage1.add(jLabelFrequenceRegle, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jLabelError.setForeground(new java.awt.Color(255, 147, 30));
        jPanelPage1.add(jLabelError, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 280, 20));

        jTextFieldFrequenceRegle.setBackground(new java.awt.Color(253, 253, 253));
        jTextFieldFrequenceRegle.setBorder(null);
        jTextFieldFrequenceRegle.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jPanelPage1.add(jTextFieldFrequenceRegle, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 100, 20));

        jPanelAac_footer.add(jPanelPage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanelAac.add(jPanelAac_footer, java.awt.BorderLayout.PAGE_END);

        jPanelAac_top.setBackground(new java.awt.Color(249, 249, 249));
        jPanelAac_top.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        jPanelAac_top.setPreferredSize(new java.awt.Dimension(398, 235));
        jPanelAac_top.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        page2_top.setBackground(new java.awt.Color(249, 249, 249));
        page2_top.setPreferredSize(new java.awt.Dimension(398, 235));
        page2_top.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelFilterMin.setBackground(new java.awt.Color(249, 249, 249));
        jPanelFilterMin.setPreferredSize(new java.awt.Dimension(398, 110));
        jPanelFilterMin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelConfianceRegleMin.setText("Confiance (Règle) : ≤ ");
        jPanelFilterMin.add(jLabelConfianceRegleMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, -1, -1));

        jLabelLevierRegleMin.setText("Levier (Règle) : ≤ ");
        jPanelFilterMin.add(jLabelLevierRegleMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));

        jLabel6.setForeground(new java.awt.Color(167, 47, 47));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/greater-than-equal-32.png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanelFilterMin.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("Less than or equal :");
        jPanelFilterMin.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        jTextFieldConfianceRegleMin.setBackground(new java.awt.Color(253, 253, 253));
        jTextFieldConfianceRegleMin.setBorder(null);
        jTextFieldConfianceRegleMin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0%"))));
        jPanelFilterMin.add(jTextFieldConfianceRegleMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 100, 20));

        jTextFieldLevierRegleMin.setBackground(new java.awt.Color(253, 253, 253));
        jTextFieldLevierRegleMin.setBorder(null);
        jTextFieldLevierRegleMin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0%"))));
        jPanelFilterMin.add(jTextFieldLevierRegleMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 100, 20));

        jLabel13.setText("(exp :77%)");
        jPanelFilterMin.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, -1));

        jLabel14.setText("(exp :77%)");
        jPanelFilterMin.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, -1, -1));

        page2_top.add(jPanelFilterMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 63, -1, -1));

        jPanelFilterSup.setBackground(new java.awt.Color(249, 249, 249));
        jPanelFilterSup.setPreferredSize(new java.awt.Dimension(398, 110));
        jPanelFilterSup.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelConfianceRegleSup.setText("Confiance (Règle) : ≥ ");
        jPanelFilterSup.add(jLabelConfianceRegleSup, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, -1, -1));

        jLabelLevierRegleSup.setText("Levier (Règle) : ≥ ");
        jPanelFilterSup.add(jLabelLevierRegleSup, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));

        jLabelGoTOMin.setForeground(new java.awt.Color(167, 47, 47));
        jLabelGoTOMin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/less-than-or-equal-32.png"))); // NOI18N
        jLabelGoTOMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelGoTOMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelGoTOMinMouseClicked(evt);
            }
        });
        jPanelFilterSup.add(jLabelGoTOMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel10.setText("Greater than or equal :");
        jPanelFilterSup.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        jTextFieldConfianceRegleSup.setBackground(new java.awt.Color(253, 253, 253));
        jTextFieldConfianceRegleSup.setBorder(null);
        jTextFieldConfianceRegleSup.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0%"))));
        jPanelFilterSup.add(jTextFieldConfianceRegleSup, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 100, 20));

        jTextFieldLevierRegleSup.setBackground(new java.awt.Color(253, 253, 253));
        jTextFieldLevierRegleSup.setBorder(null);
        jTextFieldLevierRegleSup.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0%"))));
        jTextFieldLevierRegleSup.setText("100%");
        jPanelFilterSup.add(jTextFieldLevierRegleSup, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 100, 20));

        jLabel11.setText("(exp :77%)");
        jPanelFilterSup.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, -1, -1));

        jLabel12.setText("(exp :77%)");
        jPanelFilterSup.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, -1));

        page2_top.add(jPanelFilterSup, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 63, -1, -1));

        jLabelConsequent.setText("Conséquent :");
        page2_top.add(jLabelConsequent, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        jTextFieldConsequent.setBackground(new java.awt.Color(253, 253, 253));
        jTextFieldConsequent.setBorder(null);
        page2_top.add(jTextFieldConsequent, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 100, 20));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(49, 180, 97));
        jLabel5.setText("Filter ZONE :");
        page2_top.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 140, -1));

        jLabel17.setText("(exp : a:b)");
        page2_top.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, -1));

        jLabelErrorFilter.setForeground(new java.awt.Color(255, 147, 30));
        page2_top.add(jLabelErrorFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 240, 20));

        jLabelRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/refresh.png"))); // NOI18N
        jLabelRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRefreshMouseClicked(evt);
            }
        });
        page2_top.add(jLabelRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, -1, -1));

        jPanelAac_top.add(page2_top, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        page1_top.setBackground(new java.awt.Color(249, 249, 249));
        page1_top.setPreferredSize(new java.awt.Dimension(398, 235));
        page1_top.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/dropFile.png"))); // NOI18N
        page1_top.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 190, 190));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(86, 86, 86));
        jLabel2.setText("Drop a .txt file here to start");
        page1_top.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, -1, -1));

        jPanelAac_top.add(page1_top, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanelAac.add(jPanelAac_top, java.awt.BorderLayout.PAGE_START);

        jPanel0plus.setBackground(new java.awt.Color(249, 249, 249));
        jPanel0plus.setOpaque(false);
        jPanel0plus.setPreferredSize(new java.awt.Dimension(398, 5));
        jPanel0plus.setLayout(new java.awt.BorderLayout());

        jPanelNames.setBackground(new java.awt.Color(249, 249, 249));
        jPanelNames.setLayout(new javax.swing.BoxLayout(jPanelNames, javax.swing.BoxLayout.Y_AXIS));
        jPanel0plus.add(jPanelNames, java.awt.BorderLayout.CENTER);

        jPanelAac.add(jPanel0plus, java.awt.BorderLayout.CENTER);

        jPanelAa.add(jPanelAac, java.awt.BorderLayout.CENTER);

        jPanelA.add(jPanelAa, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanelA, java.awt.BorderLayout.WEST);

        jPanelB.setBackground(new java.awt.Color(249, 249, 249));
        jPanelB.setPreferredSize(new java.awt.Dimension(477, 498));
        jPanelB.setLayout(new java.awt.BorderLayout());

        jPanelB1.setBackground(new java.awt.Color(249, 249, 249));
        jPanelB1.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBackground(new java.awt.Color(249, 249, 249));
        jScrollPane1.setBorder(null);
        jScrollPane1.setOpaque(false);

        jTextPane1.setBackground(new java.awt.Color(249, 249, 249));
        jTextPane1.setBorder(null);
        jTextPane1.setContentType("text/html"); // NOI18N
        jTextPane1.setText("<html>\n  <head>\n\n  </head>\n  <body style=\"background-color: #F9F9F9\">\n    <p style=\"margin-top: 0\">\n      \n    </p>\n  </body>\n</html>\n");
        jScrollPane1.setViewportView(jTextPane1);

        jPanelB1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanelB.add(jPanelB1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanelB, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void Default_SeparatorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Default_SeparatorMouseClicked
        if(count%2==0){
        Other_Separator.setSelected(true);
        jPanelSeparator.setVisible(true);
        count++;
        }else{
            Default_Separator.setSelected(true);
            jPanelSeparator.setVisible(false);
            getSecondSeparatorjTextField.setText("");
            getFirstSeparatorjTextField.setText("");
            count++;
        }
    }//GEN-LAST:event_Default_SeparatorMouseClicked

    private void jLabelPasseVarNamesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPasseVarNamesMouseEntered
        jLabelPasseVarNames.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/next1.png")));
        jLabel9.setForeground(new java.awt.Color(3, 169, 244));
    }//GEN-LAST:event_jLabelPasseVarNamesMouseEntered

    private void jLabelPasseVarNamesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPasseVarNamesMouseExited
        jLabelPasseVarNames.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/next0.png")));
        jLabel9.setForeground(new java.awt.Color(158, 200, 141));
    }//GEN-LAST:event_jLabelPasseVarNamesMouseExited

    private void jLabelCancelPathFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCancelPathFileMouseEntered
        jLabelCancelPathFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/Cancel1.png")));
        jLabel8.setForeground(new java.awt.Color(250, 0, 0));
    }//GEN-LAST:event_jLabelCancelPathFileMouseEntered

    private void jLabelCancelPathFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCancelPathFileMouseExited
        jLabelCancelPathFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/Cancel0.png")));
        jLabel8.setForeground(new java.awt.Color(204, 0, 0));
    }//GEN-LAST:event_jLabelCancelPathFileMouseExited

    private void jLabelPasseVarNamesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPasseVarNamesMouseClicked

       if(!jTextFieldFrequenceRegle.getText().equals("") &&  !jLabelPath.getText().equals("") && !jLabelPath.getText().equals("Please select a file type .txt")  ){
           try {
                if( Integer.parseInt(jTextFieldFrequenceRegle.getText())>0 ){
                    jLabelError.setText(""); 
                    TraitementFile tf = new TraitementFile();
                    Gtf=tf;
                    
                    if ( Other_Separator.isSelected() ) {
                        travmatrice=tf.TraitementMatrice(tf.TraitementFile(jLabelPath.getText(), getFirstSeparatorjTextField.getText()), getSecondSeparatorjTextField.getText());
                       tf.ItemsOccurence(travmatrice, Integer.parseInt(jTextFieldFrequenceRegle.getText())); 
                    }
                    else{
                        travmatrice=tf.TraitementMatrice(tf.TraitementFile(jLabelPath.getText(), " "), ",");
                        tf.ItemsOccurence(travmatrice, Integer.parseInt(jTextFieldFrequenceRegle.getText()));
                    }
                     /////
                     jPanel0plus.removeAll();
                     /////
                     jPanel0plus.setVisible(true);
                     jPanelNames.setVisible(true);
                     jPanelAac_top.setVisible(false);         page1_top.setVisible(false);     page2_top.setVisible(false);
                     jPanelPage1.setVisible(false);
                     jPanelPage3.setVisible(false);
                     jPanelPage2.setVisible(true);
                     jPanelAac_footer.setPreferredSize(new java.awt.Dimension(398, 100));

                     names.removeAll(names);//on ne le supprime que si le chemain est changé
                     JScrollPane jScrollPane1 = new JScrollPane();
                     jScrollPane=jScrollPane1;
                     jScrollPane1.setBorder(null);
                     jScrollPane1.setOpaque(false);
                     jScrollPane1.setBackground(new java.awt.Color(249, 249, 249));

                     LinkedList<JTextField> tempnames = new LinkedList();
                     ////////////////////Header////////////////////////
                     JLabel head0 = new JLabel("  Items  ");
                     head0.setPreferredSize(new Dimension(60, 30));
                     JLabel head1 = new JLabel("  Name of items  ");
                     JPanel panel0 = new JPanel();

                    panel0.setPreferredSize(new Dimension(100, 30));
                    panel0.setMinimumSize(new Dimension(100, 30));
                    panel0.setMaximumSize(new Dimension(398, 30));
                    panel0.setBorder(null);
                    panel0.setBackground(new java.awt.Color(243, 243, 243));
                    panel0.setLayout(new BorderLayout());
                    panel0.add("West",head0);
                    panel0.add("Center",head1);
                    
                    jPanel0plus.add("First",panel0);
                     ////////////////////Header////////////////////////
                    taillelist=tf.allItems.size();
                    if (taillelist>0) jLabelCheckError.setText("Rename your items and/or continue");
                    
                     for (int i = 0; i < tf.allItems.size(); i++) {
                         JLabel label = new JLabel("  "+(String) tf.allItems.get(i)+"  ");
                         label.setPreferredSize(new Dimension(60, 30));

                         JTextField name = new JTextField("");
                         if (names.size()>i) {
                             name.setText(names.get(i).getName());
                         }

                         name.setBorder(null);
                         name.setBackground(new java.awt.Color(253, 253, 253));
                         tempnames.add(name);
                         JPanel panel = new JPanel();

                         panel.setPreferredSize(new Dimension(100, 30));
                         panel.setMinimumSize(new Dimension(100, 30));
                         panel.setMaximumSize(new Dimension(398, 30));
                         panel.setBorder(null);
                         panel.setBackground(new java.awt.Color(249, 249, 249));
                         panel.setBorder(null);
                         panel.setLayout(new BorderLayout());
                         panel.add("West",label);
                         panel.add("Center",name);

                         jPanelNames.add(panel);

                     }
                     names=(LinkedList<JTextField>) tempnames.clone();
                     jScrollPane1.setViewportView(jPanelNames);

                     jPanel0plus.add("Center",jScrollPane1);
                 }
                 else jLabelError.setText("Invalid frequency,Please enter a positive integer");
            } 
           catch (Exception e) {
               System.out.println("Error "+e);
               jLabelError.setText("Invalid frequency,Please enter an integer ");
           }
        }
        else {
            if(jTextFieldFrequenceRegle.getText().equals("")) jLabelError.setText("Error : empty frequency");
            else jLabelError.setText("Error : empty file path");
        }
       
    }//GEN-LAST:event_jLabelPasseVarNamesMouseClicked

    private void jLabelBackFileDropMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackFileDropMouseExited
        jLabelBackFileDrop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/return0.png")));
        jLabel15.setForeground(new java.awt.Color(158, 200, 141));
    }//GEN-LAST:event_jLabelBackFileDropMouseExited

    private void jLabelBackFileDropMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackFileDropMouseEntered
        jLabelBackFileDrop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/return1.png")));
        jLabel15.setForeground(new java.awt.Color(3, 169, 244));
    }//GEN-LAST:event_jLabelBackFileDropMouseEntered

    private void jLabelPasseRulesFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPasseRulesFilterMouseClicked
  
        /////////////////// Test ////////////////////
        System.out.println("Names :");
        for (int i = 0; i < names.size(); i++) {
            System.out.println(names.get(i).getText());
        }
        /////////////////// Test ////////////////////
        if (taillelist>0) {
            //jLabelCheckError.setText("");
            jPanelAac_top.setVisible(true);
            page1_top.setVisible(false);
            page2_top.setVisible(true);
            jPanelFilterMin.setVisible(false);
            jPanelFilterSup.setVisible(true);

            jPanelPage1.setVisible(false);
            jPanelPage2.setVisible(false);
            jPanelPage3.setVisible(true);

            jPanel0plus.setVisible(false);
            jScrollPane.setVisible(false);
            //jPanelNames.removeAll();
            //jPanel0plus.revalidate();
            this.repaint();
            jPanelAac_footer.setPreferredSize(new java.awt.Dimension(398, 100));
        }
        else jLabelCheckError.setText("Please check your path and/or separators");;
 
        
       
        
        
    }//GEN-LAST:event_jLabelPasseRulesFilterMouseClicked

    private void jLabelPasseRulesFilterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPasseRulesFilterMouseExited
        jLabelPasseRulesFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/next0.png")));
        jLabel16.setForeground(new java.awt.Color(158, 200, 141));
    }//GEN-LAST:event_jLabelPasseRulesFilterMouseExited

    private void jLabelPasseRulesFilterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPasseRulesFilterMouseEntered
        jLabelPasseRulesFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/theme/next1.png")));
        jLabel16.setForeground(new java.awt.Color(3, 169, 244));
        
    }//GEN-LAST:event_jLabelPasseRulesFilterMouseEntered

    private void jLabelBackFileDropMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackFileDropMouseClicked
       
       jPanelNames.removeAll();
       //jPanelNames.setVisible(false);
       //jPanel0plus.removeAll();
       jPanel0plus.revalidate();
       //jPanel0plus.setVisible(true);
       jPanel0plus.setVisible(false);
       
       
       page2_top.setVisible(false);
       jPanelPage1.setVisible(true);
       jPanelPage2.setVisible(false);
       jPanelPage3.setVisible(false);
       
       jPanelAac_top.setVisible(true);
       page1_top.setVisible(true);
       
       jPanelAac_footer.setPreferredSize(new java.awt.Dimension(398, 200));
       
       
       jPanelAac_top.revalidate();
       
       this.repaint();
       
    }//GEN-LAST:event_jLabelBackFileDropMouseClicked

    private void jLabelGetInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGetInfoMouseClicked

        if(info%2==0){
            //jPanelB.setVisible(true);
            jTextPane1.setText("<html>\n" +
                                "  <head>\n" +
                                "\n" +
                                "  </head>\n" +
                                "  <body style=\"background-color: #F9F9F9\">\n" +
                                "    <p>\n" +
                                "Exemple de fichier :\n" +
                                "    </p>\n" +
                                "<table>\n" +
                                "        <tr>\n" +
                                "            <td><b>TID</b></td>\n" +
                                "            <td><b>Items</b></td>\n" +
                                "        </tr>\n" +
                                "        <tr>\n" +
                                "            <td>100</td>\n" +
                                "            <td>1,3,4</td>\n" +
                                "        </tr>\n" +
                                "        <tr>\n" +
                                "            <td>200</td>\n" +
                                "            <td>2,3,5</td>\n" +
                                "        </tr>\n" +
                                "        <tr>\n" +
                                "            <td>300</td>\n" +
                                "            <td>1,2,3,5</td>\n" +
                                "        </tr>\n" +
                                "        <tr>\n" +
                                "            <td>400</td>\n" +
                                "            <td>2,5</td>\n" +
                                "        </tr>\n" +
                                "</table>"+
                                "  </body>\n" +
                                "</html>");
            
            if(frame.getSize().width<977){
                
                if(frame.getSize().height<584){
                    frame.setSize(977, 584);
                    frame.repaint();
                }
                else{
                    frame.setSize(977, frame.getSize().height);
                    frame.repaint();
                }
                
            }
            
            info++;
        }
        else{
            //jPanelB1.setVisible(false);
            jTextPane1.setText("<html>\n" +
                                "  <head>\n" +
                                "\n" +
                                "  </head>\n" +
                                "  <body style=\"background-color: #F9F9F9\">\n" +
                                "  </body>\n" +
                                "</html>\n" +
                                "");
            if(frame.getSize().height<584){
                frame.setSize(500, 584);
                frame.repaint();
            }
            else{
                frame.setSize(500, frame.getSize().height);
                frame.repaint();
            }
            info++;
        } 
        
    }//GEN-LAST:event_jLabelGetInfoMouseClicked

    private void jLabelBackVarNamesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackVarNamesMouseClicked
        
        if(frame.getSize().height<584){
                frame.setSize(500, 584);
                frame.repaint();
        }
        else{
            frame.setSize(500, frame.getSize().height);
            frame.repaint();
        }
        
        jTextPane1.setText("<html>\n" +
                                "  <head>\n" +
                                "\n" +
                                "  </head>\n" +
                                "  <body style=\"background-color: #F9F9F9; padding-left: 50px\">\n" +
                                "  </body>\n" +
                                "</html>\n" +
                                "");
        
        jPanelAac_top.setVisible(false);         page1_top.setVisible(false);     page2_top.setVisible(false);
        jPanel0plus.setVisible(true);
        jPanelNames.setVisible(true);       jScrollPane.setVisible(true);
        jPanelPage1.setVisible(false);
        jPanelPage3.setVisible(false);
        jPanelPage2.setVisible(true);
        jPanelAac.revalidate();
        this.repaint();
    }//GEN-LAST:event_jLabelBackVarNamesMouseClicked

    private void jLabelBackVarNamesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackVarNamesMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelBackVarNamesMouseExited

    private void jLabelBackVarNamesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackVarNamesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelBackVarNamesMouseEntered

    private void jLabelPasseShowRulesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPasseShowRulesMouseClicked
        /*if(info1%2==0){   
            if(frame.getSize().width<977){

                    if(frame.getSize().height<584){
                        frame.setSize(977, 584);
                        frame.repaint();
                    }
                    else{
                        frame.setSize(977, frame.getSize().height);
                        frame.repaint();
                    }

            }
            info1++;
        }
        else{
            //jPanelB1.setVisible(false);
            
            if(frame.getSize().height<584){
                frame.setSize(500, 584);
                frame.repaint();
            }
            else{
                frame.setSize(500, frame.getSize().height);
                frame.repaint();
            }
            info1++;
        }
        */
        
        if(frame.getSize().width<977){

                    if(frame.getSize().height<584){
                        frame.setSize(977, 584);
                        frame.repaint();
                    }
                    else{
                        frame.setSize(977, frame.getSize().height);
                        frame.repaint();
                    }

        }
        tabSolu.removeAll(tabSolu);
        jLabelErrorFilter.setText("");
        String st =new String("<h1 style=\"color: red\"> The rules :</h1><br/>");
        
        //st=st+Gtf.reglesAssociationGenerale;
        for (int i = 0; i < Gtf.reglesAssociationGenerale.size(); i++) {
           
           for (int l = 0; l < Gtf.reglesAssociationGenerale.get(i).size(); l++) {
               EffetLevier(Gtf.ensembleFinaleGenerale.get(i), Gtf.reglesAssociationGenerale.get(i).get(l));
           }
           
       }
        st=st+Table(tabSolu);
        jTextPane1.setText("<html>\n" +
                                "  <head>\n" +
                                "\n" +
                                "  </head>\n" +
                                "  <body style=\"background-color: #F9F9F9; padding-left: 50px; padding-right: 30px\">\n" +
                                st+
                                "  </body>\n" +
                                "</html>\n" +
                                "");
        
        
        
    }//GEN-LAST:event_jLabelPasseShowRulesMouseClicked

    public String Table(LinkedList<LinkedList> mat){
        int nb= mat.size();
        String tab = new String("");
        tab=tab+"<br/><h3> Rules </h3>\n" +
                "<table style=\"font-family: tahoma; font-size: 13\">\n" +
                "<tr style=\"background-color:#efefef\">\n" +
                "	<td style=\"background-color:#efefef\" colspan=\"6\"><center> Number of rules : "+nb+" </center></td>\n" +
                "</tr>\n" +
                "<tr>\n" +
                "<td style=\"background-color:#e0e0e0\"> No </td>\n" +
                "<td style=\"background-color:#7e9dd6\">  Antecedent  </td>\n" +
                "<td style=\"background-color:#7cc5b3\">  Consequent  </td>\n" +
                "<td style=\"background-color:#e0e0e0\">   Lift (%)  </td>\n" +
                "<td style=\"background-color:#e0e0e0\">  Support (%)  </td>\n" +
                "<td style=\"background-color:#e0e0e0\">   Confidence (%)  </td>\n" +
                "</tr>";
        
        for (int i = 0; i < mat.size(); i++) {
            tab=tab+"<tr>\n" +
            "<td style=\"background-color:#efefef\">  "+(i+1)+"  </td>\n" +
            "<td style=\"background-color:#b1cbed\"> "+mat.get(i).get(0)+" </td>\n" +
            "<td style=\"background-color:#addbd1\"> "+mat.get(i).get(1)+" </td>\n" +
            "<td style=\"background-color:#efefef\">  "+mat.get(i).get(2)+"  </td>\n" +
            "<td style=\"background-color:#efefef\"> "+mat.get(i).get(3)+" </td>\n" +
            "<td style=\"background-color:#efefef\"> "+mat.get(i).get(4)+" </td>\n" +
            "</tr>";
            
        }
        
        tab=tab+"</table>";
        return tab;
    }
    
    
    public String Rename(LinkedList var){
        
                String stnames = new String("<b style=\"color: green\">");
                int c=0;
                for (int i = 0; i < var.size(); i++) {
                    if(Gtf.allItems.indexOf(var.get(i))!=-1){

                        if(c==0) { 
                            if( !names.get(Gtf.allItems.indexOf(var.get(i))).getText().equals("") ){ 
                                stnames=stnames+names.get(Gtf.allItems.indexOf(var.get(i))).getText();
                            }
                            else {
                                stnames=stnames+var.get(i);
                            }
                        }
                        else if(c==(var.size()-1)) {
                            if( !names.get(Gtf.allItems.indexOf(var.get(i))).getText().equals("") ){
                                stnames=stnames+" et "+names.get(Gtf.allItems.indexOf(var.get(i))).getText()+" ";
                            }
                            else {
                                stnames=stnames+" et "+var.get(i)+" ";
                            }
                        }
                        else {
                            if( !names.get(Gtf.allItems.indexOf(var.get(i))).getText().equals("") ){
                                stnames=stnames+", "+names.get(Gtf.allItems.indexOf(var.get(i))).getText();
                            }
                            else {
                                stnames=stnames+", "+var.get(i);
                            }
                        }
                        c++;
                    }
                }
                stnames=stnames+"</b>";
                System.out.println(stnames);
                return stnames;
       
        
        
    }
    
    
    public void Affiche(LinkedList<LinkedList> regle, DecimalFormat f, int totaleTransaction, int frequenceAntecedent, int frequenceConsequent, int frequenceRegle, double supportConsequent, double supportRegle, double confianceRegle, double levierRegle ){
        //////////////////////   Affichage   ////////////////////////
            stRules=stRules+" ===============================<br/><b>Règle : "+Rename( regle.get(0) )+" ==> "+Rename( regle.get(1) )+"</b><br/> ==============================="+"<br/><br/>";
            stRules=stRules+"antecedent : "+Rename( regle.get(0) )+"<br/>";
            stRules=stRules+"consequent : "+Rename( regle.get(1) )+"<br/>";
            stRules=stRules+"totaleTransaction = "+totaleTransaction+"<br/>";
            stRules=stRules+"frequenceAntecedent = "+frequenceAntecedent+"<br/>";
            stRules=stRules+"frequenceConsequent = "+frequenceConsequent+"<br/>";
            stRules=stRules+"frequenceRegle = "+frequenceRegle+"<br/>";
            stRules=stRules+"supportConsequent = "+f.format(supportConsequent*100)+"%"+"<br/>";
            stRules=stRules+"supportRegle = "+f.format(supportRegle*100)+"%"+"<br/>";
            stRules=stRules+"confianceRegle = "+f.format(confianceRegle*100)+"%"+"<br/>";
            stRules=stRules+"levierRegle = "+f.format(levierRegle*100)+"%"+"<br/><br/><br/>";
       //////////////////////   Affichage   ////////////////////////
            
       //////////////////////   Affichage Resume   ////////////////////////
            String acteurs = getActorsjTextField.getText();
            String action = getActionTextField.getText();
            
            stResume=stResume+"<li><b>« "+f.format(confianceRegle*100)+" % des "+acteurs+" qui "+action+" "+Rename( regle.get(0) )+" achètent aussi "+Rename( regle.get(1) )+", cette configuration se retrouvant pour "+f.format(supportRegle*100)+" % des individus». <br/> => Avec un Levier de "+f.format(levierRegle*100)+" %</b><br/><br/></li>";
           
       //////////////////////   Affichage Resume  ////////////////////////
            
       //////////////////////   Affichage Table  ////////////////////////
            LinkedList tempTab = new LinkedList();
            tempTab.add(Rename( regle.get(0) ));
            tempTab.add(Rename( regle.get(1) ));
            tempTab.add(f.format(levierRegle*100));
            tempTab.add(f.format(supportRegle*100));
            tempTab.add(f.format(confianceRegle*100));
            
            tabSolu.add(tempTab);
       //////////////////////   Affichage Table  ////////////////////////
    }
    
    public boolean Cherche(LinkedList consequent,String textField){
        LinkedList list = new LinkedList();
        for (int i = 0; i < textField.split(":").length; i++) {
            list.add(textField.split(":")[i]);
        }
        if ( consequent.containsAll(list) && list.containsAll(consequent) ) {
            return true;
        } else {
            return false;
        }
        
    }
    
    public double EffetLevier( LinkedList ensembleFinale, LinkedList<LinkedList> regle ){
      // antecedent ==> consequent
       LinkedList antecedent = new LinkedList(regle.get(0));
       LinkedList consequent = new LinkedList(regle.get(1));
       DecimalFormat f = new DecimalFormat();
       f.setMaximumFractionDigits(2);
       
       int totaleTransaction = travmatrice.size();
       int frequenceAntecedent = Gtf.CalculOccurence(travmatrice, antecedent);
       int frequenceConsequent = Gtf.CalculOccurence(travmatrice, consequent);
       int frequenceRegle = Gtf.CalculOccurence(travmatrice, ensembleFinale);;
       double supportConsequent = 0.0 + ((double)frequenceConsequent)/totaleTransaction;//   frequenceConsequent/totaleTransaction
       double supportRegle = 0.0 + ((double)frequenceRegle)/totaleTransaction;//  frequenceRegle/totaleTransaction
       double confianceRegle = 0.0 + ((double)frequenceRegle)/frequenceAntecedent;//  frequenceRegle/frequenceAntecedent
       double levierRegle = 0.0 + confianceRegle/supportConsequent;//   confianceRegle/supportConsequent
       
       try {
        
        if(!jTextFieldConsequent.getText().equals("")){
            if( jPanelFilterSup.isVisible() ){
                if( !jTextFieldConfianceRegleSup.getText().equals("") && !jTextFieldLevierRegleSup.getText().equals("") ){
                    if( Cherche( consequent,jTextFieldConsequent.getText() )
                       && Integer.parseInt(jTextFieldConfianceRegleSup.getText().split("%")[0]) <= (confianceRegle*100) 
                       && Integer.parseInt(jTextFieldLevierRegleSup.getText().split("%")[0]) <= (levierRegle*100) ){ 
                        Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                    }
                }
                else{
                    if( !jTextFieldConfianceRegleSup.getText().equals("") ){
                        if(Cherche( consequent,jTextFieldConsequent.getText() )
                            && Integer.parseInt(jTextFieldConfianceRegleSup.getText().split("%")[0]) <= (confianceRegle*100) ){ 
                            Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                        }
                    }
                    else if( !jTextFieldLevierRegleSup.getText().equals("") ){
                        if(Cherche( consequent,jTextFieldConsequent.getText() )
                            && Integer.parseInt(jTextFieldLevierRegleSup.getText().split("%")[0]) <= (levierRegle*100) ){ 
                            Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                        }
                    }
                    else {
                        if (Cherche( consequent,jTextFieldConsequent.getText() )) {
                            Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle);
                        }
                    }
                }
            }
            else{
                if( !jTextFieldConfianceRegleMin.getText().equals("") && !jTextFieldLevierRegleMin.getText().equals("") ){
                    if( Cherche( consequent,jTextFieldConsequent.getText() )
                       && Integer.parseInt(jTextFieldConfianceRegleMin.getText().split("%")[0]) >= (confianceRegle*100) 
                       && Integer.parseInt(jTextFieldLevierRegleMin.getText().split("%")[0]) >= (levierRegle*100) ){ 
                        Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                    }
                }
                else{
                    if( !jTextFieldConfianceRegleMin.getText().equals("") ){
                        if(Cherche( consequent,jTextFieldConsequent.getText() )
                            && Integer.parseInt(jTextFieldConfianceRegleMin.getText().split("%")[0]) >= (confianceRegle*100) ){ 
                            Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                        }
                    }
                    else if( !jTextFieldLevierRegleMin.getText().equals("") ){
                        if(Cherche( consequent,jTextFieldConsequent.getText() )
                            && Integer.parseInt(jTextFieldLevierRegleMin.getText().split("%")[0]) >= (levierRegle*100) ){ 
                            Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                        }
                    }
                    else {
                        if (Cherche( consequent,jTextFieldConsequent.getText() )) {
                            Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle);
                        }
                    }
                }
            }
        }
        else {
            if( jPanelFilterSup.isVisible() ){
                if( !jTextFieldConfianceRegleSup.getText().equals("") && !jTextFieldLevierRegleSup.getText().equals("") ){
                    if( Integer.parseInt(jTextFieldConfianceRegleSup.getText().split("%")[0]) <= (confianceRegle*100) 
                       && Integer.parseInt(jTextFieldLevierRegleSup.getText().split("%")[0]) <= (levierRegle*100) ){ 
                        Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                    }
                }
                else{
                    if( !jTextFieldConfianceRegleSup.getText().equals("") ){
                        if( Integer.parseInt(jTextFieldConfianceRegleSup.getText().split("%")[0]) <= (confianceRegle*100) ){ 
                            Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                        }
                    }
                    else if( !jTextFieldLevierRegleSup.getText().equals("") ){
                        if( Integer.parseInt(jTextFieldLevierRegleSup.getText().split("%")[0]) <= (levierRegle*100) ){ 
                            Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                        }
                    }
                    else {
                        Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle);
                    }
                    
                }
            }
            else{
                if( !jTextFieldConfianceRegleMin.getText().equals("") && !jTextFieldLevierRegleMin.getText().equals("") ){
                    if( Integer.parseInt(jTextFieldConfianceRegleMin.getText().split("%")[0]) >= (confianceRegle*100) 
                       && Integer.parseInt(jTextFieldLevierRegleMin.getText().split("%")[0]) >= (levierRegle*100) ){ 
                        Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                    }
                }
                else{
                    if( !jTextFieldConfianceRegleMin.getText().equals("") ){
                        if( Integer.parseInt(jTextFieldConfianceRegleMin.getText().split("%")[0]) >= (confianceRegle*100) ){ 
                            Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                        }
                    }
                    else if( !jTextFieldLevierRegleMin.getText().equals("") ){
                        if( Integer.parseInt(jTextFieldLevierRegleMin.getText().split("%")[0]) >= (levierRegle*100) ){ 
                            Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle); 
                        }
                    }
                    else {
                        Affiche(regle, f, totaleTransaction, frequenceAntecedent, frequenceConsequent, frequenceRegle, supportConsequent, supportRegle, confianceRegle, levierRegle);
                    }
                }
            }
        }
       } 
       catch (Exception e) {
           jLabelErrorFilter.setText("Error : respect formes");
       }
        
        
        
       return levierRegle;
       
   }
    
    
    private void jLabelPasseShowRulesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPasseShowRulesMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelPasseShowRulesMouseExited

    private void jLabelPasseShowRulesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPasseShowRulesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelPasseShowRulesMouseEntered

    private void jLabelGoTOMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGoTOMinMouseClicked
        jPanelFilterSup.setVisible(false);
        jPanelFilterMin.setVisible(true);
        //remise à zéro
        jTextFieldConfianceRegleSup.setText("");
        jTextFieldLevierRegleSup.setText("");
        
        
    }//GEN-LAST:event_jLabelGoTOMinMouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        jPanelFilterMin.setVisible(false);
        jPanelFilterSup.setVisible(true);
        //remise à zéro
        jTextFieldConfianceRegleMin.setText("");
        jTextFieldLevierRegleMin.setText("");
        
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabelAddFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAddFileMouseClicked
        choosefile();
    }//GEN-LAST:event_jLabelAddFileMouseClicked

    private void jLabelCancelPathFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCancelPathFileMouseClicked
        jLabelPath.setText("");
        Default_Separator.setSelected(true);
        getFirstSeparatorjTextField.setText("");
        getSecondSeparatorjTextField.setText("");
        jTextFieldFrequenceRegle.setText("");
        jLabelError.setText("");
        
        
    }//GEN-LAST:event_jLabelCancelPathFileMouseClicked

    private void jLabelRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRefreshMouseClicked
        if(frame.getSize().width<977){

                    if(frame.getSize().height<584){
                        frame.setSize(977, 584);
                        frame.repaint();
                    }
                    else{
                        frame.setSize(977, frame.getSize().height);
                        frame.repaint();
                    }

        }
        
        jLabelErrorFilter.setText("");
        String st =new String("<h1 style=\"color: red\"> The rules :</h1><br/>");
        stRules=st;
        //st=st+Gtf.reglesAssociationGenerale;
        for (int i = 0; i < Gtf.reglesAssociationGenerale.size(); i++) {
            LinkedList ensembleR = new LinkedList();
            ensembleR = (LinkedList) Gtf.reglesAssociationGenerale.get(i).get(0).get(0).clone();
            for (int j = 0; j < Gtf.reglesAssociationGenerale.get(i).get(0).get(1).size(); j++) {
                ensembleR.add(Gtf.reglesAssociationGenerale.get(i).get(0).get(1).get(j));
                
            }
            
            
           stRules=stRules+" <h3 style=\"color: #62B7E8\">Les regles de l'ensemble "+ensembleR+" :"+"</h3>"+"<br/><br/>";
           for (int l = 0; l < Gtf.reglesAssociationGenerale.get(i).size(); l++) {
               EffetLevier(Gtf.ensembleFinaleGenerale.get(i), Gtf.reglesAssociationGenerale.get(i).get(l));
            }
           
       }
        
        jTextPane1.setText("<html>\n" +
                                "  <head>\n" +
                                "\n" +
                                "  </head>\n" +
                                "  <body style=\"background-color: #F9F9F9; padding-left: 50px\">\n" +
                                stRules+
                                "  </body>\n" +
                                "</html>\n" +
                                "");
    }//GEN-LAST:event_jLabelRefreshMouseClicked

    private void jLabelGetResumeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGetResumeMouseClicked
       
        
        if(frame.getSize().width<977){

                    if(frame.getSize().height<584){
                        frame.setSize(977, 584);
                        frame.repaint();
                    }
                    else{
                        frame.setSize(977, frame.getSize().height);
                        frame.repaint();
                    }

        }
        
        jLabelErrorFilter.setText("");
        String st =new String("<h1 style=\"color: red; padding-left: 10px\"> Récapitulation :</h1><br/>");
        stResume=st;
        
        for (int i = 0; i < Gtf.reglesAssociationGenerale.size(); i++) {
            
           LinkedList ensembleR = new LinkedList();
            ensembleR = (LinkedList) Gtf.reglesAssociationGenerale.get(i).get(0).get(0).clone();
            for (int j = 0; j < Gtf.reglesAssociationGenerale.get(i).get(0).get(1).size(); j++) {
                ensembleR.add(Gtf.reglesAssociationGenerale.get(i).get(0).get(1).get(j));
                
            }
            
           stResume=stResume+" <h3 style=\"color: #62B7E8; padding-left: 10px\">Les regles de l'ensemble "+ensembleR+" :"+"</h3>"+"<br/><br/>";
           
           for (int l = 0; l < Gtf.reglesAssociationGenerale.get(i).size(); l++) {
               EffetLevier(Gtf.ensembleFinaleGenerale.get(i), Gtf.reglesAssociationGenerale.get(i).get(l));
            }
           
       }
        
        jTextPane1.setText("<html>\n" +
                                "  <head>\n" +
                                "\n" +
                                "  </head>\n" +
                                "  <body style=\"background-color: #F9F9F9; padding-left: 1px\">\n" +
                                "<ul>"+stResume+"</ul>"+
                                "  </body>\n" +
                                "</html>\n" +
                                "");
        
        
    }//GEN-LAST:event_jLabelGetResumeMouseClicked

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        if(count1%2==0){
        jPanelDetail.setVisible(true);
        getActorsjTextField.setText("clients");
        getActionTextField.setText("achètent");
        count1++;
        }else{
            jPanelDetail.setVisible(false);
            getActorsjTextField.setText("clients");
            getActionTextField.setText("achètent");
            count1++;
        }
    }//GEN-LAST:event_jLabel18MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Default_Separator;
    private javax.swing.JCheckBox Other_Separator;
    private javax.swing.JLabel actionJLabel;
    private javax.swing.JLabel actorJLabel;
    private javax.swing.ButtonGroup buttonGroupSeparator;
    private javax.swing.JTextField getActionTextField;
    private javax.swing.JTextField getActorsjTextField;
    private javax.swing.JTextField getFirstSeparatorjTextField;
    private javax.swing.JTextField getSecondSeparatorjTextField;
    private javax.swing.JLabel jLabel0;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAddFile;
    private javax.swing.JLabel jLabelBackFileDrop;
    private javax.swing.JLabel jLabelBackVarNames;
    private javax.swing.JLabel jLabelCancelPathFile;
    private javax.swing.JLabel jLabelCheckError;
    private javax.swing.JLabel jLabelConfianceRegleMin;
    private javax.swing.JLabel jLabelConfianceRegleSup;
    private javax.swing.JLabel jLabelConsequent;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JLabel jLabelErrorFilter;
    private javax.swing.JLabel jLabelFrequenceRegle;
    private javax.swing.JLabel jLabelGetInfo;
    private javax.swing.JLabel jLabelGetResume;
    private javax.swing.JLabel jLabelGoTOMin;
    private javax.swing.JLabel jLabelLevierRegleMin;
    private javax.swing.JLabel jLabelLevierRegleSup;
    private javax.swing.JLabel jLabelPasseRulesFilter;
    private javax.swing.JLabel jLabelPasseShowRules;
    private javax.swing.JLabel jLabelPasseVarNames;
    private javax.swing.JLabel jLabelPath;
    private javax.swing.JLabel jLabelRefresh;
    private javax.swing.JPanel jPanel0;
    private javax.swing.JPanel jPanel0plus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelA;
    private javax.swing.JPanel jPanelAa;
    private javax.swing.JPanel jPanelAac;
    private javax.swing.JPanel jPanelAac_footer;
    private javax.swing.JPanel jPanelAac_top;
    private javax.swing.JPanel jPanelAaf;
    private javax.swing.JPanel jPanelAaf_center;
    private javax.swing.JPanel jPanelAaf_topbar;
    private javax.swing.JPanel jPanelB;
    private javax.swing.JPanel jPanelB1;
    private javax.swing.JPanel jPanelDetail;
    private javax.swing.JPanel jPanelFilterMin;
    private javax.swing.JPanel jPanelFilterSup;
    private javax.swing.JPanel jPanelNames;
    private javax.swing.JPanel jPanelPage1;
    private javax.swing.JPanel jPanelPage2;
    private javax.swing.JPanel jPanelPage3;
    private javax.swing.JPanel jPanelSeparator;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField jTextFieldConfianceRegleMin;
    private javax.swing.JFormattedTextField jTextFieldConfianceRegleSup;
    private javax.swing.JTextField jTextFieldConsequent;
    private javax.swing.JFormattedTextField jTextFieldFrequenceRegle;
    private javax.swing.JFormattedTextField jTextFieldLevierRegleMin;
    private javax.swing.JFormattedTextField jTextFieldLevierRegleSup;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JPanel page1_top;
    private javax.swing.JPanel page2_top;
    // End of variables declaration//GEN-END:variables
}
